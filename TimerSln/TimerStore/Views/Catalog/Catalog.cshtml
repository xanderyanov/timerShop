@using static TimerStore.BaseController
@using System.Text;
@model ProductsListViewModel

@{
    ViewData["Title"] = "Home Page";
    ViewSettingsClass viewSettings = ViewBag.ViewSettings as ViewSettingsClass;
}

<script>

    $(function () {
        $(".layout")
        //.change(function (ev) {
        //    var cb = ev.target;
        //    var $cb = $(cb);
        //    if ($cb.is("input.myFilter[data-id]")) {
        //        applyFilters();
        //        return;
        //    }
        //})
        .click(function (ev) {
            $this = $(ev.target);
            if ($this.is(".JS_Filters_run")) {
                applyFilters();
                return;
            }
        });

        //selectedFilters();
    });

    
    //function selectedFilters(){
    //    var selectedF = @viewSettings.CheckedFilters;
    //}


    var NoFilterURL = window.location.href;

    function collectIds(idElems) {
        var result = "";
        for (var i = 0; i < idElems.length; i++) {
            if (idElems[i].checked) {
                var idparts = $(idElems[i]).data("filter");
                console.log("checked - " + idparts);
                if (result !== "") result += "&f_";
                result += idparts;
            }
        }
        return result;
    }

    function applyFilters() {
        var params = collectIds($("input[data-val='filter']"));

        var newUrl = NoFilterURL + "?f_" + params;

        console.log("NoFilterURL - " + newUrl);

        window.location.href = newUrl;
    }

</script>

<div id="categories" class="col-3">
    <vc:navigation-menu product="new Product()" />

    @if (Filter.AllGenders != null) {
        if (viewSettings.CheckedFilters.ContainsKey("Genders")) { var checkedValues = viewSettings.CheckedFilters["Genders"]; }
        <ul class="mb-2">
            @foreach (var i in Filter.AllGenders) {
                if (i == "") continue;
                <li>
                    <div class="form-check">
                        <input class="form-check-input myFilter" type="checkbox" @(checkedValues.Contains(i) ? "checked=\"checked\"" : "") value="" id="@i" data-id="@i" data-filter="@("Gender=" + Base64Fix.Tuda(i))" data-val="filter">
                        <label class="form-check-label" for="">
                            @i
                        </label>
                    </div>
                </li>
            }
        </ul>
    }

    @if (Filter.AllCaseForm != null) {
        if (viewSettings.CheckedFilters.ContainsKey("CaseForm")) { var checkedValues = viewSettings.CheckedFilters["CaseForm"]; }
        <ul class="mb-2">
            @foreach (var i in Filter.AllCaseForm) {
                if (i == "") continue;
                <li>
                    <div class="form-check">
                        <input class="form-check-input myFilter" type="checkbox" @(checkedValues.Contains(i) ? "checked=\"checked\"" : "") value="" id="@i" data-id="@i" data-filter="@("CaseForm=" + Base64Fix.Tuda(i))" data-val="filter">
                        <label class="form-check-label" for="">
                            @i
                        </label>
                    </div>
                </li>
            }
        </ul>
    }

    @if (Filter.AllGlass != null) {
        var checkedValues = viewSettings.CheckedFilters["Glass"] ?? null;
        <ul class="mb-2">
            @foreach (var i in Filter.AllGlass) {
                if (i == "") continue;
                <li>
                    <div class="form-check">
                        <input class="form-check-input myFilter" type="checkbox" @(checkedValues.Contains(i) ? "checked=\"checked\"" : "") value="" id="@i" data-id="@i" data-filter="@("Glass=" + Base64Fix.Tuda(i))" data-val="filter">
                        <label class="form-check-label" for="">
                            @i
                        </label>
                    </div>
                </li>
            }
        </ul>
    }

    <div class="btn btn-primary JS_Filters_run">Показать результаты</div>
</div>

<div class="col-9">
    <h2>@Model.CurrentCategory</h2>
    <div class="catalog catalog_wide row">
        @foreach (var p in Model.Products ?? Enumerable.Empty<Product>()) {
            <partial name="Partials/ProductSummary" model="p" />
        }
    </div>
    @*<div page-model="@Model?.PagingInfo" page-action="Index"></div>*@

    <div class="row">
        <div page-model="@Model.PagingInfo" page-action="Brand" page-classes-enabled="true"
                page-class="btn m-1 " page-class-normal="m-1 btn-outline-dark"
                page-class-selected="btn-primary"
                class="pull-right m-1">
        </div>
    </div>
</div>



